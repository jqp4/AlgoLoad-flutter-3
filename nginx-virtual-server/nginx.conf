# Пользователь, от имени которого будет работать Nginx
user root;

worker_processes 1;

# Путь к файлу с идентификатором процесса
pid /root/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Определяем основные MIME-типы для Flutter-приложения
    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/javascript                       js;
        application/json                      json;
        image/png                             png;
        image/jpeg                            jpg jpeg;
        image/svg+xml                         svg;
        application/wasm                      wasm;
        font/woff                             woff;
        font/woff2                            woff2;
    }
    
    default_type  application/octet-stream;
    access_log /root/nginx-access.log;
    error_log /root/nginx-error.log;

    sendfile        on;
    keepalive_timeout  65;
    
    # Увеличиваем размер буфера для больших заголовков
    client_header_buffer_size 64k;
    large_client_header_buffers 4 64k;

    server {
        listen 0.0.0.0:8080;
        server_name _;

        # Указываем корневую директорию Flutter-приложения
        root /root/flutter-buid-web;
        index index.html;

        # Отключаем проверку прав доступа для решения проблемы Permission denied
        disable_symlinks off;

        # Обработка основных запросов
        location / {
            # CORS headers
            add_header 'Access-Control-Allow-Origin' 'http://45.153.231.45:8080' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache";
        }

        # Handle OPTIONS requests
        location ~ ^/.*$ {
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' 'http://45.153.231.45:8080' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
                add_header 'Access-Control-Max-Age' 1728000 always;
                add_header 'Access-Control-Allow-Credentials' 'true' always;
                add_header 'Content-Type' 'text/plain; charset=utf-8' always;
                add_header 'Content-Length' 0 always;
                return 204;
            }
            try_files $uri $uri/ /index.html;
        }

        # Добавляем заголовки для кэширования статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|wasm)$ {
            expires 1y;
            access_log off;
            add_header Cache-Control "public, max-age=31536000";
        }

        # Добавляем явную обработку для flutter_service_worker.js
        location = /flutter_service_worker.js {
            add_header Cache-Control "no-cache";
        }
    }
}